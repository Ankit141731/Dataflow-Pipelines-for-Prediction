name: Deploy Streamlit Web App to EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up AWS CLI and Docker
    - name: Set up AWS CLI and Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli docker.io

    # Step 3: Login to Amazon ECR
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_LOGIN_URI }}

    # Step 4: Build and push Docker image to ECR
    - name: Build and push Docker image to ECR
      run: |
        IMAGE_TAG=latest
        docker build -t ${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG .
        docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG
        docker push ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:$IMAGE_TAG

    # Step 5: Install AWS EC2 CLI (if necessary) and deploy to EC2 using SSM
    - name: Deploy Docker image to EC2 via SSM
      run: |
        # Install AWS CLI v2 if not installed
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

        # Run commands on EC2 via SSM
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy Docker image" \
          --parameters 'commands=["docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest", "docker rm -f streamlit-app || true", "docker run -d --name streamlit-app -p 8501:8501 ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest"]' \
          --region ${{ secrets.AWS_REGION }}
